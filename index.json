[{"content":"Have you ever needed to zip a git repository?\nWell, this is fairly simple with git\ngit archive --format zip --output \u0026lt;output_path\u0026gt; HEAD But what about if you need to zip multiple repositories at once? This might get tedious.\nBash scripting to the rescue Worry no more!\nCreate a repoZipper.sh file with the following content\n#!/bin/bash # Set the name of the output archive file OUTPUT_ARCHIVE=\u0026#34;repos.zip\u0026#34; # Create a temporary directory to store the cloned repositories TEMP_DIR=$(mktemp -d) echo \u0026#34;Working temporary directory: ${TEMP_DIR}\u0026#34; # Loop through each repository URL passed as input while read -r REPO_URL do # Extract the repository name from the URL REPO_NAME=$(echo \u0026#34;${REPO_URL}\u0026#34; | cut -d\u0026#39;/\u0026#39; -f2) # Clone the repository git clone \u0026#34;${REPO_URL}\u0026#34; \u0026#34;${TEMP_DIR}/${REPO_NAME}\u0026#34; # Create a zip archive of the repository pushd \u0026#34;${TEMP_DIR}/${REPO_NAME}\u0026#34; || exit git archive --format=zip --output=\u0026#34;${TEMP_DIR}/${REPO_NAME}.zip\u0026#34; HEAD popd || exit done # Combine all individual repos into one archive pushd \u0026#34;${TEMP_DIR}\u0026#34; || exit zip -r \u0026#34;${OUTPUT_ARCHIVE}\u0026#34; ./*.zip popd || exit # Move the output archive to the current directory mv \u0026#34;${TEMP_DIR}/${OUTPUT_ARCHIVE}\u0026#34; . # Remove the temporary directory rm -rf \u0026#34;${TEMP_DIR}\u0026#34; Then create a file repos.txt with the list of repositories to zip\nNote: make sure the repository format is SSH (starting with git@ rather than https) otherwise the script will fail.\ngit@github.com:\u0026lt;username\u0026gt;/\u0026lt;repo_1\u0026gt;.git git@github.com:\u0026lt;username\u0026gt;/\u0026lt;repo_2\u0026gt;.git Now all is left to do is to call the script\nbash repoZipper.sh \u0026lt; repos.txt The script will:\ncreate a temporary directory clone all the repositories in the repos.txt file zip each repository zip all the zipped repositories into a single repos.zip archive copy the repos.zip archive to the current directory remove the temporary directory Simple but effective!\n","permalink":"https://zorzi.dev/posts/repo_zipper/","summary":"Have you ever needed to zip a git repository?\nWell, this is fairly simple with git\ngit archive --format zip --output \u0026lt;output_path\u0026gt; HEAD But what about if you need to zip multiple repositories at once? This might get tedious.\nBash scripting to the rescue Worry no more!\nCreate a repoZipper.sh file with the following content\n#!/bin/bash # Set the name of the output archive file OUTPUT_ARCHIVE=\u0026#34;repos.zip\u0026#34; # Create a temporary directory to store the cloned repositories TEMP_DIR=$(mktemp -d) echo \u0026#34;Working temporary directory: ${TEMP_DIR}\u0026#34; # Loop through each repository URL passed as input while read -r REPO_URL do # Extract the repository name from the URL REPO_NAME=$(echo \u0026#34;${REPO_URL}\u0026#34; | cut -d\u0026#39;/\u0026#39; -f2) # Clone the repository git clone \u0026#34;${REPO_URL}\u0026#34; \u0026#34;${TEMP_DIR}/${REPO_NAME}\u0026#34; # Create a zip archive of the repository pushd \u0026#34;${TEMP_DIR}/${REPO_NAME}\u0026#34; || exit git archive --format=zip --output=\u0026#34;${TEMP_DIR}/${REPO_NAME}.","title":"repo zipper"},{"content":"Introduction This is the solution for the December 2022\u0026rsquo;s Jane Street puzzle. Check out the original post on the Jane Street website.\nThe Puzzle A six-sided die, with numbers written on each of its faces, is placed on the 6-by-6 grid above, in the lower-left (yellow) corner. It then makes a sequence of “moves”. Each move consists of tipping the die into an orthogonally adjacent square within the grid.\nThe die starts with a “score” of 0. On the Nth move, its score increases by N times the value of the die facing up after the move. However, the die is only allowed to move into a square if its score after the move matches the value in the square. Also, the die cannot be translated or rotated in place in addition to these moves.\nAfter some number of moves the die arrives in the upper-right (blue) corner.\nThe answer to this puzzle is the sum of values in the unvisited squares from the die’s journey.\nSolution For this puzzle, I utilized Python due to its efficient implementation capabilities. I began by creating classes to represent the board and die, keeping track of position and score. Initially, the die did not have any numbers assigned to its faces. When the die was moved, there were two possible scenarios:\nThe value of the upper face of the die had not yet been set: In this case, I needed to calculate the value of the die\u0026rsquo;s face and verify that it was valid. The upper face of the die already had a value: In this instance, I needed to ensure that the value on the square matched the die\u0026rsquo;s score. If either of these cases was not valid, the move was deemed invalid. I utilized recursion, with the stopping condition being when the die reached the upper-right corner. After a solution was found, I simply counted the sum of the values in the unvisited squares to arrive at the final answer: 1935. The board showing the die\u0026rsquo;s path is depicted below.\nAnd just for the curious ones, this is the value of the die\u0026rsquo;s faces at the starting position:\nAnd this is the link to the solution from Jane Street Link\nFinal notes This was a fun puzzle to solve and definitely easier compared to the previous one ( Pent up frustration 2) as can be seen from the number of successful submissions.\nYou can also take a look at the code behind my solution on GitHub.\nDo you want to take a look at more puzzles? Check out here\n","permalink":"https://zorzi.dev/posts/jane_street/jane_2022_12/","summary":"Introduction This is the solution for the December 2022\u0026rsquo;s Jane Street puzzle. Check out the original post on the Jane Street website.\nThe Puzzle A six-sided die, with numbers written on each of its faces, is placed on the 6-by-6 grid above, in the lower-left (yellow) corner. It then makes a sequence of “moves”. Each move consists of tipping the die into an orthogonally adjacent square within the grid.\nThe die starts with a “score” of 0.","title":"Die Agony"},{"content":"Introduction This is the solution of the November\u0026rsquo;s Jane Street puzzle. It involves pentagons, patience and a lot of computation. Check out the original post on the Jane Street website.\nThe Puzzle The scope of this puzzle is to find the minimum distance between two pentagons arranged in a polyform.\nYou have seventeen identical unit regular pentagonal tiles on a tabletop. You arrange them all into a single polyform, so each pentagon placed after the first shares a side with an already-placed pentagon, but no two pentagons overlap other than along their boundaries. What is the smallest nonzero distance you can create between two of the pentagons?\nAs an example, if you had to find this distance for four pentagons, the answer would be ~0.5877853, from the arrangement pictured above.\nSolution In order to solve this problem, I started to think about how to represent a sequence of pentagons. The way I went about it was to fix the first two pentagons and then starting to add the next on one of the four faces of the previous pentagon. In this way I could represent a sequence of pentagons as a sequence of integers from 2 to 5, where each integer represents the face of the previous pentagon that the next pentagon is added to. To represent the simple example with four pentagons, the sequence of integers would be [3, 2].\nI also wanted to create visualizations of the polyforms that I would create. That would ensure I was on the right track and also help me to understand the problem better. I ended up choosing Python as the language to solve this problem.\nSolving the problem with brute force would require cracking all possible sequences of integers from 2 to 5 with length 15 (remember that the first two pentagons are fixed). This would be equivalent to 4^15 = 1073741824 possible sequences (more tha 1 billion sequences!). There are however some things to keep in mind that would help reduce the number of sequences to consider:\nsome sequences are equivalent to others in terms of minimum distance between pentagons, for example [3, 2] and [4, 5] are equivalent. This means that we can reduce the number of sequences to consider by half by considering only the sequences that start with 2 or 3. if we find that a pentagon is causing a collision (i.e. [2, 2, \u0026hellip;]), we can stop considering the sequence that causes the collision and continue directly with the next one (in this case it would be [2, 3, \u0026hellip;] and we would have skipped 4^13 ~ 67 million sequences)). There are probably other ways to reduce the number of sequences to consider, but it is alway a trade between time spent coding and time spent running the code.\nThere are different sequences that lead to the same solution of 0.1387573, and this is one of them [2, 5, 2, 5, 2, 3, 4, 2, 5, 2, 3, 4, 2, 3, 5] which you can also see in the image below.\nAnd this is the link to the solution from Jane Street Link\nFinal notes This was a fun puzzle to solve. If I had to start from scratch, I would probably use C++ rather than Python, just to gain some speed in the computation and not having the laptop running for days\u0026hellip;\nYou can also take a look at the code behind my solution on GitHub.\nDo you want to take a look at more puzzles? Check out here\n","permalink":"https://zorzi.dev/posts/jane_street/jane_2022_11/","summary":"Introduction This is the solution of the November\u0026rsquo;s Jane Street puzzle. It involves pentagons, patience and a lot of computation. Check out the original post on the Jane Street website.\nThe Puzzle The scope of this puzzle is to find the minimum distance between two pentagons arranged in a polyform.\nYou have seventeen identical unit regular pentagonal tiles on a tabletop. You arrange them all into a single polyform, so each pentagon placed after the first shares a side with an already-placed pentagon, but no two pentagons overlap other than along their boundaries.","title":"Pent-up Frustration 2"},{"content":"I recently discovered the website Jane Street. They are a quantitative trading firm that hires people with a strong mathematical background. They also publish monthly challenges in the form of puzzles. If you solve the puzzle, you can submit your solution and if correct, they will publish your name on the puzzle\u0026rsquo;s page.\nThe first one I tackled was Pent-up Frustration 2.\nI also publish the code on GitHub (once the solution is out).\nDo you want to take a look at more puzzles? Check out here\n","permalink":"https://zorzi.dev/posts/jane_street/puzzles/","summary":"I recently discovered the website Jane Street. They are a quantitative trading firm that hires people with a strong mathematical background. They also publish monthly challenges in the form of puzzles. If you solve the puzzle, you can submit your solution and if correct, they will publish your name on the puzzle\u0026rsquo;s page.\nThe first one I tackled was Pent-up Frustration 2.\nI also publish the code on GitHub (once the solution is out).","title":"Jane Street Puzzles"},{"content":"Puzzles Do you like puzzles? I do!\nYou can find some puzzles here\nAbout this site Do you want to see how I built this site? Check out this post\n","permalink":"https://zorzi.dev/about/","summary":"Puzzles Do you like puzzles? I do!\nYou can find some puzzles here\nAbout this site Do you want to see how I built this site? Check out this post","title":"About"},{"content":"This site is built using Hugo, a very fast static site generator built in golang that translates markdown files into websites.\nTheme The base theme I am using is PaperMod but I heavily modified it to fit my needs.\nLink Checker To make sure all the links are working, I use hydra. This runs as a Github Action and scrapes the website for broken links.\nSource Code You can take a look at the source code on GitHub\n","permalink":"https://zorzi.dev/posts/about_this_site/","summary":"This site is built using Hugo, a very fast static site generator built in golang that translates markdown files into websites.\nTheme The base theme I am using is PaperMod but I heavily modified it to fit my needs.\nLink Checker To make sure all the links are working, I use hydra. This runs as a Github Action and scrapes the website for broken links.\nSource Code You can take a look at the source code on GitHub","title":"About this site"},{"content":"Hello there I am Giorgio Zorzi, an experienced software engineer and data scientist. I have a proven track record of delivering high-quality software and leveraging machine learning techniques to uncover valuable insights from complex datasets. Through my academic and professional experiences, I have honed my research and technical skills, allowing me to tackle intricate problems and drive innovation. I am a highly motivated and detail-oriented professional with a passion for driving efficiency and pushing the boundaries of what is possible. My enthusiasm for technology and eagerness to learn new technologies enable me to stay ahead of emerging trends and continue growing as a professional.\nDo you have suggestions or you just want to say hi? You can do that at giorgio@zorzi.dev\n","permalink":"https://zorzi.dev/hello/","summary":"Hello there I am Giorgio Zorzi, an experienced software engineer and data scientist. I have a proven track record of delivering high-quality software and leveraging machine learning techniques to uncover valuable insights from complex datasets. Through my academic and professional experiences, I have honed my research and technical skills, allowing me to tackle intricate problems and drive innovation. I am a highly motivated and detail-oriented professional with a passion for driving efficiency and pushing the boundaries of what is possible.","title":"About"},{"content":"","permalink":"https://zorzi.dev/education/bachelor/","summary":"","title":"Bachelor"},{"content":" Led technical strategic planning, including roadmap development and end-to-end sprint management. Led the development and design of end-to-end, high quality software, complex technical prototypes and delivered the MVP for Cybrik AI, a cloud-based (Azure) enterprise platform with a React.js front end, a Python back end and data ingestion using Apache Airflow. Designed and implemented the document search functionalities using Machine Learning and Natural Language Processing (NLP) techniques reducing the time for our customers to find the relevant information. Scaled-up the company and hired additional technical resources to advance the platform after successful onboarding of clients onto Cybrik AI with the increase of the company valuation to US$ 5 million. Represented Cybrik AI, with CEO and COO, during its selection as a portfolio company of Techstars (the second largest pre-seed fund); demonstrated leadership, ownership, technical expertise and entrepreneurial skills, and strengthened pitching and business case presentation abilities, in addition to overall investor relations and senior stakeholder management. Led the recruitment and development of a team of 3 (a front-end developer, a back-end developer and a data scientist); defined requirements, deliverables, managed timelines and performance. Created Kubernetes infrastructure in Azure and built pipelines in Github to support Continuous Integration and Continuous Delivery; Excellent knowledge and experience of various programming languages and techniques, including: FAST API for creating RESTful APIs with OpenAPI specifications and swagger documentation; Docker and Docker-compose; Javascript and Typescript (React); PostgreSQL, MongoDB; Elasticsearch; Azure and AWS; Kubernetes and Helm; Python libraries for machine learning such as scikit-learn and TensorFlow. ","permalink":"https://zorzi.dev/experience/cybrik/","summary":"Led technical strategic planning, including roadmap development and end-to-end sprint management. Led the development and design of end-to-end, high quality software, complex technical prototypes and delivered the MVP for Cybrik AI, a cloud-based (Azure) enterprise platform with a React.js front end, a Python back end and data ingestion using Apache Airflow. Designed and implemented the document search functionalities using Machine Learning and Natural Language Processing (NLP) techniques reducing the time for our customers to find the relevant information.","title":"Cybrik"},{"content":"Awarded a scholarship sponsored by the EU throughout the duration of the research internship which was part of my Master’s Degree dissertation.\nContributed to the study of the separation of impurities in melted silicon using electromagnetic induction Developed and acquired skills in conducting simulations using Finite Element Methods ","permalink":"https://zorzi.dev/experience/greenwich/","summary":"Awarded a scholarship sponsored by the EU throughout the duration of the research internship which was part of my Master’s Degree dissertation.\nContributed to the study of the separation of impurities in melted silicon using electromagnetic induction Developed and acquired skills in conducting simulations using Finite Element Methods ","title":"Greenwich"},{"content":" Consulted and project-managed the Greenhouse Gas (GHG) reporting cycle for three consecutive years for LivaNova Plc, a Nasdaq-listed medical device manufacturing company, with 9 production sites across various countries. Identified opportunities for improvement in GHG reporting following a gap analysis, review and health-check of previous reports. Prepared and presented findings to the LivaNova Board of Directors highlighting opportunities for improvement and optimization. Worked with external auditors and senior management to ensure timely delivery of an accurate and comprehensive GHG report to the LivaNova Board of Directors for the approval prior to submission to the UK Regulator and disclosure in the Annual Report to shareholders. ","permalink":"https://zorzi.dev/experience/livanova/","summary":"Consulted and project-managed the Greenhouse Gas (GHG) reporting cycle for three consecutive years for LivaNova Plc, a Nasdaq-listed medical device manufacturing company, with 9 production sites across various countries. Identified opportunities for improvement in GHG reporting following a gap analysis, review and health-check of previous reports. Prepared and presented findings to the LivaNova Board of Directors highlighting opportunities for improvement and optimization. Worked with external auditors and senior management to ensure timely delivery of an accurate and comprehensive GHG report to the LivaNova Board of Directors for the approval prior to submission to the UK Regulator and disclosure in the Annual Report to shareholders.","title":"Livanova"},{"content":"","permalink":"https://zorzi.dev/education/master/","summary":"","title":"Master"},{"content":" Selected to join ONYX Insights on a fixed-term project to apply data mining techniques and statistical analysis to extract data from wind turbines. Analysed complex datasets using Natural Language Processing techniques. Applied Machine Learning techniques, transforming raw data into valuable insights. Created Graphical User Interface for data visualisation, creating a time savings for the final users of up to 90%. Strengthened proficiency in Python and ability to write standardised code. ","permalink":"https://zorzi.dev/experience/onyx/","summary":"Selected to join ONYX Insights on a fixed-term project to apply data mining techniques and statistical analysis to extract data from wind turbines. Analysed complex datasets using Natural Language Processing techniques. Applied Machine Learning techniques, transforming raw data into valuable insights. Created Graphical User Interface for data visualisation, creating a time savings for the final users of up to 90%. Strengthened proficiency in Python and ability to write standardised code.","title":"Onyx"},{"content":" Developed algorithm using MATLAB Simulink used for capital budgeting and estimation of the profitability of potential investments that optimises a Battery Storage System and maximises the Internal Rate of Return. Developed commercial awareness and strengthened technical knowledge of algorithm development. Offered a full-time position as a Research Engineer. ","permalink":"https://zorzi.dev/experience/ore_catapult/","summary":" Developed algorithm using MATLAB Simulink used for capital budgeting and estimation of the profitability of potential investments that optimises a Battery Storage System and maximises the Internal Rate of Return. Developed commercial awareness and strengthened technical knowledge of algorithm development. Offered a full-time position as a Research Engineer. ","title":"ORE_Catapult"},{"content":"“Improved Yield from Wind Turbines through online anomaly detection and compensation”\nIdentified new and innovative ways of extracting data from wind turbines to maximise energy production. Developed research proposing new ways of maximising energy production whilst reducing costs. Advanced project management and time management skills. Furthered research and technical knowledge as well as commercial awareness in the field of wind and renewable energy. ","permalink":"https://zorzi.dev/experience/phd/","summary":"“Improved Yield from Wind Turbines through online anomaly detection and compensation”\nIdentified new and innovative ways of extracting data from wind turbines to maximise energy production. Developed research proposing new ways of maximising energy production whilst reducing costs. Advanced project management and time management skills. Furthered research and technical knowledge as well as commercial awareness in the field of wind and renewable energy. ","title":"Phd"},{"content":"Awarded an annual £14,000 grant for four consecutive years of PhD studies.\n","permalink":"https://zorzi.dev/education/phd/","summary":"Awarded an annual £14,000 grant for four consecutive years of PhD studies.","title":"PhD"},{"content":" Designed MATLAB algorithm to characterise the Wind Turbine Power Curves in an innovative way using SCADA data, substantially reducing the time required for data cleaning and achieving improved efficiency. Consolidated technical knowledge of algorithm development and strengthened project management skills ","permalink":"https://zorzi.dev/experience/sse/","summary":" Designed MATLAB algorithm to characterise the Wind Turbine Power Curves in an innovative way using SCADA data, substantially reducing the time required for data cleaning and achieving improved efficiency. Consolidated technical knowledge of algorithm development and strengthened project management skills ","title":"SSE"},{"content":" Served as Teaching Assistant for the Graduate Programme in Wind, Solar and Hydro Energy. Assisted Lecturers in the delivery of the course; held tutorials and prepared teaching materials. Mentored undergraduate students. ","permalink":"https://zorzi.dev/experience/ta/","summary":" Served as Teaching Assistant for the Graduate Programme in Wind, Solar and Hydro Energy. Assisted Lecturers in the delivery of the course; held tutorials and prepared teaching materials. Mentored undergraduate students. ","title":"TA"},{"content":"","permalink":"https://zorzi.dev/experience/techstars/","summary":"","title":"Techstars"}]